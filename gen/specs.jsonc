// @ generated by Grok 4 (Expert)
// DO NOT EDIT. DO NOT EDIT. DO NOT EDIT. DO NOT EDIT. DO NOT EDIT.
// DO NOT EDIT. DO NOT EDIT. DO NOT EDIT. DO NOT EDIT. DO NOT EDIT.
{
    // This $ represents "common," which means generally all HTML items can use this.
    // However, this "$" does not apply to meta, script, link, style, and other special tags that are not "rendered" on screen.
    // You can ignore "style," as it's CSS.
    "$": {
        // @ edited
        "description": "",
        "attributes": {
            "accesskey": {
                "type": "string",
                "description": "Specifies a shortcut key to activate or focus an element."
            },
            "class": {
                "type": "string",
                "description": "Class names, separated with spaces."
            },
            "style": {
                "type": "css",
                "description": "Inline CSS styles."
            },
            "contenteditable": {
                "type": "boolean",
                "description": "Indicates whether the element's content is editable."
            },
            "dir": {
                "type": "string",
                "description": "Specifies the text direction for the content (values: ltr, rtl, auto)."
            },
            "draggable": {
                "type": "boolean",
                "description": "Specifies whether an element is draggable."
            },
            "hidden": {
                "type": "boolean",
                "description": "Indicates that the element is not yet, or is no longer, relevant and should not be rendered."
            },
            "id": {
                "type": "string",
                "description": "A unique identifier that only appears once throughout the whole document."
            },
            "lang": {
                "type": "string",
                "description": "Specifies the language of the element's content."
            },
            "spellcheck": {
                "type": "boolean",
                "description": "Specifies whether the element should have its spelling and grammar checked."
            },
            "tabindex": {
                "type": "integer",
                "description": "Specifies the tab order of an element."
            },
            "title": {
                "type": "string",
                "description": "Specifies extra information about an element (displayed as a tooltip)."
            }
        }
    },
    // Root and document metadata elements (some may not use $ if not rendered)
    "html": {
        "description": "Represents the root (top-level element) of an HTML document. All other elements must be descendants of this element.",
        "attributes": {
            "manifest": {
                "type": "string",
                "description": "Specifies the URL of the document's cache manifest (for offline applications)."
            },
            "xmlns": {
                "type": "string",
                "description": "Specifies the XML namespace (typically 'http://www.w3.org/1999/xhtml' for XHTML)."
            }
        }
    },
    "head": {
        "description": "Contains machine-readable information (metadata) about the document, like its title, scripts, and style sheets.",
        "attributes": {}
    },
    "title": {
        "description": "Defines the document's title that is shown in a browser's title bar or a page's tab.",
        "attributes": {}
    },
    "base": {
        "description": "Specifies the base URL to use for all relative URLs in a document. There can be only one such element in a document.",
        "attributes": {
            "href": {
                "type": "string",
                "description": "The base URL to use for all relative URLs in the document."
            },
            "target": {
                "type": "string",
                "description": "The default target for all hyperlinks and forms in the document."
            }
        }
    },
    "link": {
        "description": "Specifies relationships between the current document and an external resource. Commonly used to link to CSS or icons.",
        "attributes": {
            "href": {
                "type": "string",
                "description": "The URL of the linked resource."
            },
            "rel": {
                "type": "string",
                "description": "The relationship between the current document and the linked resource."
            },
            "type": {
                "type": "string",
                "description": "The MIME type of the linked resource."
            },
            "sizes": {
                "type": "string",
                "description": "Sizes of icons for visual media."
            },
            "media": {
                "type": "string",
                "description": "The media for which the linked resource is designed."
            },
            "integrity": {
                "type": "string",
                "description": "Subresource integrity value for security."
            },
            "crossorigin": {
                "type": "string",
                "description": "How to handle CORS requests."
            },
            "referrerpolicy": {
                "type": "string",
                "description": "Referrer information to send when fetching the resource."
            }
        }
    },
    "meta": {
        "description": "Represents metadata that cannot be represented by other HTML meta-related elements.",
        "attributes": {
            "name": {
                "type": "string",
                "description": "The name of the metadata."
            },
            "content": {
                "type": "string",
                "description": "The value associated with the http-equiv or name attribute."
            },
            "charset": {
                "type": "string",
                "description": "The character encoding for the HTML document."
            },
            "http-equiv": {
                "type": "string",
                "description": "Provides an HTTP header for the information/value of the content attribute."
            }
        }
    },
    // Sectioning elements
    "body": {
        "description": "Represents the content of an HTML document. There can be only one such element in a document.",
        "attributes": {}
    },
    "article": {
        "description": "Represents a self-contained composition in a document, which is intended to be independently distributable or reusable.",
        "attributes": {}
    },
    "section": {
        "description": "Represents a generic standalone section of a document, which doesn't have a more specific semantic element to represent it.",
        "attributes": {}
    },
    "nav": {
        "description": "Represents a section of a page whose purpose is to provide navigation links.",
        "attributes": {}
    },
    "aside": {
        "description": "Represents a portion of a document whose content is only indirectly related to the document's main content.",
        "attributes": {}
    },
    "h1": {
        "description": "Represents the highest level section heading.",
        "attributes": {}
    },
    "h2": {
        "description": "Represents the second level section heading.",
        "attributes": {}
    },
    "h3": {
        "description": "Represents the third level section heading.",
        "attributes": {}
    },
    "h4": {
        "description": "Represents the fourth level section heading.",
        "attributes": {}
    },
    "h5": {
        "description": "Represents the fifth level section heading.",
        "attributes": {}
    },
    "h6": {
        "description": "Represents the lowest level section heading.",
        "attributes": {}
    },
    "header": {
        "description": "Represents introductory content, typically a group of introductory or navigational aids.",
        "attributes": {}
    },
    "footer": {
        "description": "Represents a footer for its nearest sectioning content or sectioning root element.",
        "attributes": {}
    },
    "address": {
        "description": "Indicates that the enclosed HTML provides contact information for a person, people, or organization.",
        "attributes": {}
    },
    // Text content elements
    "p": {
        "description": "Represents a paragraph.",
        "attributes": {}
    },
    "hr": {
        "description": "Represents a thematic break between paragraph-level elements.",
        "attributes": {}
    },
    "pre": {
        "description": "Represents preformatted text which is to be presented exactly as written in the HTML file.",
        "attributes": {}
    },
    "blockquote": {
        "description": "Indicates that the enclosed text is an extended quotation.",
        "attributes": {
            "cite": {
                "type": "string",
                "description": "A URL that designates a source document or message for the quoted content."
            }
        }
    },
    "ol": {
        "description": "Represents an ordered list of items.",
        "attributes": {
            "reversed": {
                "type": "boolean",
                "description": "Specifies that the list order should be reversed."
            },
            "start": {
                "type": "integer",
                "description": "Specifies the starting value of an ordered list."
            },
            "type": {
                "type": "string",
                "description": "Specifies the kind of marker to use in the list (1, a, A, i, I)."
            }
        }
    },
    "ul": {
        "description": "Represents an unordered list of items.",
        "attributes": {}
    },
    "menu": {
        "description": "Represents an unordered list of items, typically rendered as a bulleted list (similar to ul, but semantic for menus).",
        "attributes": {}
    },
    "li": {
        "description": "Represents an item in a list.",
        "attributes": {
            "value": {
                "type": "integer",
                "description": "Specifies the value of a list item in ordered lists."
            }
        }
    },
    "dl": {
        "description": "Represents a description list.",
        "attributes": {}
    },
    "dt": {
        "description": "Specifies a term in a description or definition list.",
        "attributes": {}
    },
    "dd": {
        "description": "Provides the description, definition, or value for the preceding term (dt) in a description list (dl).",
        "attributes": {}
    },
    "figure": {
        "description": "Represents self-contained content, potentially with an optional caption (figcaption).",
        "attributes": {}
    },
    "figcaption": {
        "description": "Represents a caption or legend describing the rest of the contents of its parent figure element.",
        "attributes": {}
    },
    "main": {
        "description": "Represents the dominant content of the body of a document.",
        "attributes": {}
    },
    "div": {
        "description": "The generic container for flow content. It has no effect on the content or layout until styled.",
        "attributes": {}
    },
    // Inline text semantics
    "a": {
        "description": "Creates a hyperlink to web pages, files, email addresses, locations in the same page, or anything else a URL can address.",
        "attributes": {
            "href": {
                "type": "string",
                "description": "The URL that the hyperlink points to."
            },
            "target": {
                "type": "string",
                "description": "Where to display the linked URL (_self, _blank, _parent, _top)."
            },
            "download": {
                "type": "string",
                "description": "Indicates that the hyperlink is to be used for downloading a resource."
            },
            "rel": {
                "type": "string",
                "description": "Specifies the relationship between the current document and the linked document."
            },
            "hreflang": {
                "type": "string",
                "description": "Specifies the language of the linked resource."
            },
            "type": {
                "type": "string",
                "description": "Specifies the MIME type of the linked resource."
            },
            "referrerpolicy": {
                "type": "string",
                "description": "Specifies which referrer is sent when fetching the resource."
            }
        }
    },
    "em": {
        "description": "Marks text that has stress emphasis.",
        "attributes": {}
    },
    "strong": {
        "description": "Represents strong importance, seriousness, or urgency for its contents.",
        "attributes": {}
    },
    "small": {
        "description": "Represents side-comments and small print, like copyright and legal text.",
        "attributes": {}
    },
    "s": {
        "description": "Represents contents that are no longer accurate or no longer relevant.",
        "attributes": {}
    },
    "cite": {
        "description": "Represents a reference to a creative work.",
        "attributes": {}
    },
    "q": {
        "description": "Indicates that the enclosed text is a short inline quotation.",
        "attributes": {
            "cite": {
                "type": "string",
                "description": "A URL that designates a source document or message for the quoted content."
            }
        }
    },
    "dfn": {
        "description": "Used to indicate the term being defined within the context of a definition phrase or sentence.",
        "attributes": {}
    },
    "abbr": {
        "description": "Represents an abbreviation or acronym.",
        "attributes": {}
    },
    "ruby": {
        "description": "Represents small annotations that are rendered above, below, or next to base text, usually used for showing the pronunciation of East Asian characters.",
        "attributes": {}
    },
    "rt": {
        "description": "Specifies the ruby text component of a ruby annotation.",
        "attributes": {}
    },
    "rp": {
        "description": "Used to provide fall-back parentheses for browsers that do not support display of ruby annotations.",
        "attributes": {}
    },
    "data": {
        "description": "Links a given piece of content with a machine-readable translation.",
        "attributes": {
            "value": {
                "type": "string",
                "description": "A machine-readable translation of the content."
            }
        }
    },
    "time": {
        "description": "Represents a specific period in time.",
        "attributes": {
            "datetime": {
                "type": "string",
                "description": "A machine-readable form of the date/time."
            }
        }
    },
    "code": {
        "description": "Displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code.",
        "attributes": {}
    },
    "var": {
        "description": "Represents the name of a variable in a mathematical expression or a programming context.",
        "attributes": {}
    },
    "samp": {
        "description": "Used to enclose inline text which represents sample (or quoted) output from a computer program.",
        "attributes": {}
    },
    "kbd": {
        "description": "Represents a span of inline text denoting textual user input from a keyboard, voice input, or any other text entry device.",
        "attributes": {}
    },
    "sub": {
        "description": "Specifies inline text which should be displayed as subscript for solely typographical reasons.",
        "attributes": {}
    },
    "sup": {
        "description": "Specifies inline text which is to be displayed as superscript for solely typographical reasons.",
        "attributes": {}
    },
    "i": {
        "description": "Represents a range of text that is set off from the normal text for a different reason, such as idiomatic text or technical terms.",
        "attributes": {}
    },
    "b": {
        "description": "Represents a span of text stylistically different from normal text, without conveying any special importance.",
        "attributes": {}
    },
    "u": {
        "description": "Represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation.",
        "attributes": {}
    },
    "mark": {
        "description": "Represents text which is marked or highlighted for reference or notation purposes.",
        "attributes": {}
    },
    "bdi": {
        "description": "Tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text.",
        "attributes": {}
    },
    "bdo": {
        "description": "Overrides the current directionality of text, so that the text within is rendered in a different direction.",
        "attributes": {
            "dir": {
                "type": "string",
                "description": "Overrides the text direction (ltr or rtl)."
            }
        }
    },
    "span": {
        "description": "A generic inline container for phrasing content, which does not inherently represent anything.",
        "attributes": {}
    },
    "br": {
        "description": "Produces a line break in text (carriage-return).",
        "attributes": {}
    },
    "wbr": {
        "description": "Represents a word break opportunity—a position within text where the browser may optionally break a line.",
        "attributes": {}
    },
    // Edits
    "ins": {
        "description": "Represents a range of text that has been added to a document.",
        "attributes": {
            "cite": {
                "type": "string",
                "description": "A URI for a resource that explains the change."
            },
            "datetime": {
                "type": "string",
                "description": "The date and time when the text was inserted/changed."
            }
        }
    },
    "del": {
        "description": "Represents a range of text that has been deleted from a document.",
        "attributes": {
            "cite": {
                "type": "string",
                "description": "A URI for a resource that explains the change."
            },
            "datetime": {
                "type": "string",
                "description": "The date and time when the text was deleted."
            }
        }
    },
    // Embedded content
    "picture": {
        "description": "Contains zero or more source elements and one img element to offer alternative versions of an image for different display/device scenarios.",
        "attributes": {}
    },
    "source": {
        "description": "Specifies multiple media resources for the picture, audio, or video element.",
        "attributes": {
            "src": {
                "type": "string",
                "description": "The URL of the embeddable content (for audio/video)."
            },
            "srcset": {
                "type": "string",
                "description": "Images to use in different situations (e.g., high-resolution displays, small monitors)."
            },
            "sizes": {
                "type": "string",
                "description": "Image sizes for different page layouts."
            },
            "media": {
                "type": "string",
                "description": "Media query of the resource's intended media."
            },
            "type": {
                "type": "string",
                "description": "The MIME type of the resource."
            }
        }
    },
    "img": {
        "description": "Embeds an image into the document.",
        "attributes": {
            "alt": {
                "type": "string",
                "description": "Alternative text for the image."
            },
            "src": {
                "type": "string",
                "description": "The URL of the embeddable image."
            },
            "srcset": {
                "type": "string",
                "description": "One or more responsive image candidates."
            },
            "sizes": {
                "type": "string",
                "description": "Image sizes for different page layouts."
            },
            "crossorigin": {
                "type": "string",
                "description": "How the element handles cross-origin requests."
            },
            "usemap": {
                "type": "string",
                "description": "The partial URL (starting with #) of an image map associated with the element."
            },
            "ismap": {
                "type": "boolean",
                "description": "Indicates that the image is part of a server-side image map."
            },
            "width": {
                "type": "integer",
                "description": "The width of the image, in pixels."
            },
            "height": {
                "type": "integer",
                "description": "The height of the image, in pixels."
            },
            "referrerpolicy": {
                "type": "string",
                "description": "Referrer policy for fetches initiated by the element."
            },
            "decoding": {
                "type": "string",
                "description": "Provides a hint to the browser as to how it should decode the image."
            },
            "loading": {
                "type": "string",
                "description": "Indicates how the browser should load the image (eager or lazy)."
            },
            "fetchpriority": {
                "type": "string",
                "description": "Provides a hint of the relative priority to use when fetching the image."
            }
        }
    },
    "iframe": {
        "description": "Represents a nested browsing context, embedding another HTML page into the current one.",
        "attributes": {
            "src": {
                "type": "string",
                "description": "The URL of the page to embed."
            },
            "srcdoc": {
                "type": "string",
                "description": "Inline HTML to embed as the content of the frame."
            },
            "name": {
                "type": "string",
                "description": "A name for the embedded browsing context."
            },
            "sandbox": {
                "type": "string",
                "description": "Enables a set of extra restrictions for the content in the iframe."
            },
            "allow": {
                "type": "string",
                "description": "Specifies a feature policy for the iframe."
            },
            "allowfullscreen": {
                "type": "boolean",
                "description": "Indicates whether the iframe can activate fullscreen mode."
            },
            "width": {
                "type": "integer",
                "description": "The width of the frame, in pixels."
            },
            "height": {
                "type": "integer",
                "description": "The height of the frame, in pixels."
            },
            "referrerpolicy": {
                "type": "string",
                "description": "Referrer policy for fetches initiated by the element."
            },
            "loading": {
                "type": "string",
                "description": "Indicates how the browser should load the iframe (eager or lazy)."
            },
            "credentialless": {
                "type": "boolean",
                "description": "Indicates whether to load the iframe in a credentialless mode."
            }
        }
    },
    "embed": {
        "description": "Embeds external content at the specified point in the document.",
        "attributes": {
            "src": {
                "type": "string",
                "description": "The URL of the resource to embed."
            },
            "type": {
                "type": "string",
                "description": "The MIME type to use to select the plug-in to instantiate."
            },
            "width": {
                "type": "integer",
                "description": "The displayed width of the resource, in pixels."
            },
            "height": {
                "type": "integer",
                "description": "The displayed height of the resource, in pixels."
            }
        }
    },
    "object": {
        "description": "Represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.",
        "attributes": {
            "data": {
                "type": "string",
                "description": "The address of the resource."
            },
            "type": {
                "type": "string",
                "description": "The MIME type of the resource specified by data."
            },
            "name": {
                "type": "string",
                "description": "Name of the object (for form submission)."
            },
            "form": {
                "type": "string",
                "description": "Associates the element with a form element."
            },
            "width": {
                "type": "integer",
                "description": "The width of the resource, in pixels."
            },
            "height": {
                "type": "integer",
                "description": "The height of the resource, in pixels."
            }
        }
    },
    "video": {
        "description": "Embeds a media player which supports video playback into the document.",
        "attributes": {
            "src": {
                "type": "string",
                "description": "The URL of the video to embed."
            },
            "crossorigin": {
                "type": "string",
                "description": "How the element handles cross-origin requests."
            },
            "poster": {
                "type": "string",
                "description": "A URL for an image to be shown while the video is downloading."
            },
            "preload": {
                "type": "string",
                "description": "Hints how much buffering the media resource will likely need."
            },
            "autoplay": {
                "type": "boolean",
                "description": "Hint that the media resource can be started automatically when the page is loaded."
            },
            "playsinline": {
                "type": "boolean",
                "description": "Hints that the media should play inline instead of requiring fullscreen."
            },
            "loop": {
                "type": "boolean",
                "description": "Whether to loop the media resource."
            },
            "muted": {
                "type": "boolean",
                "description": "Whether to mute the media resource by default."
            },
            "controls": {
                "type": "boolean",
                "description": "Shows the default video controls (play/pause etc.)."
            },
            "width": {
                "type": "integer",
                "description": "The width of the video, in pixels."
            },
            "height": {
                "type": "integer",
                "description": "The height of the video, in pixels."
            }
        }
    },
    "audio": {
        "description": "Used to embed sound content in documents.",
        "attributes": {
            "src": {
                "type": "string",
                "description": "The URL of the audio to embed."
            },
            "crossorigin": {
                "type": "string",
                "description": "How the element handles cross-origin requests."
            },
            "preload": {
                "type": "string",
                "description": "Hints how much buffering the media resource will likely need."
            },
            "autoplay": {
                "type": "boolean",
                "description": "Hint that the media resource can be started automatically when the page is loaded."
            },
            "loop": {
                "type": "boolean",
                "description": "Whether to loop the media resource."
            },
            "muted": {
                "type": "boolean",
                "description": "Whether to mute the media resource by default."
            },
            "controls": {
                "type": "boolean",
                "description": "Shows the default audio controls."
            }
        }
    },
    "track": {
        "description": "Used as a child of the media elements, audio and video. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles.",
        "attributes": {
            "default": {
                "type": "boolean",
                "description": "Indicates that the track should be enabled unless the user's preferences indicate something different."
            },
            "kind": {
                "type": "string",
                "description": "How the text track is meant to be used (subtitles, captions, descriptions, chapters, metadata)."
            },
            "label": {
                "type": "string",
                "description": "A user-readable title of the text track."
            },
            "src": {
                "type": "string",
                "description": "Address of the track (.vtt file)."
            },
            "srclang": {
                "type": "string",
                "description": "Language of the track text data."
            }
        }
    },
    "canvas": {
        "description": "Container element to use with either the canvas scripting API or the WebGL API to draw graphics and animations.",
        "attributes": {
            "width": {
                "type": "integer",
                "description": "The width of the coordinate space, in pixels."
            },
            "height": {
                "type": "integer",
                "description": "The height of the coordinate space, in pixels."
            }
        }
    },
    // Table content
    "table": {
        "description": "Represents tabular data — that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.",
        "attributes": {}
    },
    "caption": {
        "description": "Specifies the caption (or title) of a table.",
        "attributes": {}
    },
    "colgroup": {
        "description": "Defines a group of columns within a table.",
        "attributes": {
            "span": {
                "type": "integer",
                "description": "Number of columns the group spans."
            }
        }
    },
    "col": {
        "description": "Defines a column within a table and is used for defining common semantics on all common cells.",
        "attributes": {
            "span": {
                "type": "integer",
                "description": "Number of columns the column definition spans."
            }
        }
    },
    "tbody": {
        "description": "Encapsulates a set of table rows (tr elements), indicating that they comprise the body of the table.",
        "attributes": {}
    },
    "thead": {
        "description": "Defines a set of rows defining the head of the columns of the table.",
        "attributes": {}
    },
    "tfoot": {
        "description": "Defines a set of rows summarizing the columns of the table.",
        "attributes": {}
    },
    "tr": {
        "description": "Defines a row of cells in a table.",
        "attributes": {}
    },
    "td": {
        "description": "Defines a cell of a table that contains data.",
        "attributes": {
            "colspan": {
                "type": "integer",
                "description": "Number of columns the cell extends."
            },
            "rowspan": {
                "type": "integer",
                "description": "Number of rows the cell extends."
            },
            "headers": {
                "type": "string",
                "description": "List of space-separated IDs of th elements that the cell is related to."
            }
        }
    },
    "th": {
        "description": "Defines a cell as a header of a group of table cells.",
        "attributes": {
            "colspan": {
                "type": "integer",
                "description": "Number of columns the header cell extends."
            },
            "rowspan": {
                "type": "integer",
                "description": "Number of rows the header cell extends."
            },
            "headers": {
                "type": "string",
                "description": "List of space-separated IDs of other th elements that the header is related to."
            },
            "scope": {
                "type": "string",
                "description": "Defines the cells that the header relates to (row, col, rowgroup, colgroup)."
            },
            "abbr": {
                "type": "string",
                "description": "Alternative label to use for the header cell when referencing it."
            }
        }
    },
    // Forms
    "form": {
        "description": "Represents a document section containing interactive controls for submitting information.",
        "attributes": {
            "accept-charset": {
                "type": "string",
                "description": "Space-separated character encodings the server accepts."
            },
            "action": {
                "type": "string",
                "description": "URL that processes the form submission."
            },
            "autocomplete": {
                "type": "string",
                "description": "Indicates whether controls in this form can have their values automatically completed (on or off)."
            },
            "enctype": {
                "type": "string",
                "description": "Encoding type when method is post (application/x-www-form-urlencoded, multipart/form-data, text/plain)."
            },
            "method": {
                "type": "string",
                "description": "HTTP method to use for form submission (get, post)."
            },
            "name": {
                "type": "string",
                "description": "Name of the form."
            },
            "novalidate": {
                "type": "boolean",
                "description": "Indicates that the form shouldn't be validated when submitted."
            },
            "target": {
                "type": "string",
                "description": "Where to display the response after submitting the form."
            },
            "rel": {
                "type": "string",
                "description": "Relationship between the form and the action URL."
            }
        }
    },
    "label": {
        "description": "Represents a caption for an item in a user interface.",
        "attributes": {
            "for": {
                "type": "string",
                "description": "The id of a labelable form-related element."
            }
        }
    },
    "input": {
        "description": "Used to create interactive controls for web-based forms in order to accept data from the user.",
        "attributes": {
            "accept": {
                "type": "string",
                "description": "Hint for expected file type in file upload controls."
            },
            "alt": {
                "type": "string",
                "description": "Alt text for an image input type."
            },
            "autocomplete": {
                "type": "string",
                "description": "Hint for form autofill feature."
            },
            "capture": {
                "type": "string",
                "description": "Media capture input method in file upload controls."
            },
            "checked": {
                "type": "boolean",
                "description": "Whether the control is checked."
            },
            "dirname": {
                "type": "string",
                "description": "Name of form field to use for sending the element's directionality in form submission."
            },
            "disabled": {
                "type": "boolean",
                "description": "Whether the form control is disabled."
            },
            "form": {
                "type": "string",
                "description": "Associates the control with a form element."
            },
            "formaction": {
                "type": "string",
                "description": "URL to use for form submission."
            },
            "formenctype": {
                "type": "string",
                "description": "Form data set encoding type to use for form submission."
            },
            "formmethod": {
                "type": "string",
                "description": "HTTP method to use for form submission."
            },
            "formnovalidate": {
                "type": "boolean",
                "description": "Bypass form control validation for form submission."
            },
            "formtarget": {
                "type": "string",
                "description": "Browsing context for form submission."
            },
            "height": {
                "type": "integer",
                "description": "Height of the image for type=image."
            },
            "list": {
                "type": "string",
                "description": "The id of a datalist element that provides predefined options."
            },
            "max": {
                "type": "string",
                "description": "Maximum value."
            },
            "maxlength": {
                "type": "integer",
                "description": "Maximum length of value."
            },
            "min": {
                "type": "string",
                "description": "Minimum value."
            },
            "minlength": {
                "type": "integer",
                "description": "Minimum length of value."
            },
            "multiple": {
                "type": "boolean",
                "description": "Whether to allow multiple values."
            },
            "name": {
                "type": "string",
                "description": "Name of the form control."
            },
            "pattern": {
                "type": "string",
                "description": "Pattern the value must match to be valid."
            },
            "placeholder": {
                "type": "string",
                "description": "Text that appears in the form control when empty."
            },
            "popovertarget": {
                "type": "string",
                "description": "The id of the popover element this input targets."
            },
            "popovertargetaction": {
                "type": "string",
                "description": "The action to perform on the popover (show, hide, toggle)."
            },
            "readonly": {
                "type": "boolean",
                "description": "Whether to allow the value to be edited by the user."
            },
            "required": {
                "type": "boolean",
                "description": "Whether the control is required for form submission."
            },
            "size": {
                "type": "integer",
                "description": "Size of the control."
            },
            "src": {
                "type": "string",
                "description": "Image URL for type=image."
            },
            "step": {
                "type": "string",
                "description": "Incremental values that are valid."
            },
            "type": {
                "type": "string",
                "description": "Type of form control (text, password, checkbox, radio, file, etc.)."
            },
            "value": {
                "type": "string",
                "description": "Value of the form control."
            },
            "width": {
                "type": "integer",
                "description": "Width of the image for type=image."
            }
        }
    },
    "button": {
        "description": "An interactive element activated by a user with a mouse, keyboard, finger, voice command, or other assistive technology.",
        "attributes": {
            "disabled": {
                "type": "boolean",
                "description": "Whether the form control is disabled."
            },
            "form": {
                "type": "string",
                "description": "Associates the element with a form element."
            },
            "formaction": {
                "type": "string",
                "description": "URL to use for form submission."
            },
            "formenctype": {
                "type": "string",
                "description": "Form data set encoding type to use for form submission."
            },
            "formmethod": {
                "type": "string",
                "description": "HTTP method to use for form submission."
            },
            "formnovalidate": {
                "type": "boolean",
                "description": "Bypass form control validation for form submission."
            },
            "formtarget": {
                "type": "string",
                "description": "Browsing context for form submission."
            },
            "name": {
                "type": "string",
                "description": "Name of the element to use for form submission."
            },
            "popovertarget": {
                "type": "string",
                "description": "The id of the popover element this button targets."
            },
            "popovertargetaction": {
                "type": "string",
                "description": "The action to perform on the popover (show, hide, toggle)."
            },
            "type": {
                "type": "string",
                "description": "Type of button (button, reset, submit)."
            },
            "value": {
                "type": "string",
                "description": "Value to be sent with form submission."
            }
        }
    },
    "select": {
        "description": "Represents a control that provides a menu of options.",
        "attributes": {
            "autocomplete": {
                "type": "string",
                "description": "Hint for form autofill feature."
            },
            "disabled": {
                "type": "boolean",
                "description": "Whether the form control is disabled."
            },
            "form": {
                "type": "string",
                "description": "Associates the element with a form element."
            },
            "multiple": {
                "type": "boolean",
                "description": "Whether to allow multiple options to be selected."
            },
            "name": {
                "type": "string",
                "description": "Name of the element to use for form submission."
            },
            "required": {
                "type": "boolean",
                "description": "Whether the control is required for form submission."
            },
            "size": {
                "type": "integer",
                "description": "Number of options to show to the user."
            }
        }
    },
    "datalist": {
        "description": "Contains a set of option elements that represent the permissible or recommended options available to choose from within other controls.",
        "attributes": {}
    },
    "optgroup": {
        "description": "Creates a grouping of options within a select element.",
        "attributes": {
            "disabled": {
                "type": "boolean",
                "description": "If present, all options in this group are disabled."
            },
            "label": {
                "type": "string",
                "description": "The name of the group of options."
            }
        }
    },
    "option": {
        "description": "Used to define an item contained in a select, an optgroup, or a datalist element.",
        "attributes": {
            "disabled": {
                "type": "boolean",
                "description": "Whether the option is disabled."
            },
            "label": {
                "type": "string",
                "description": "Text to be displayed for the option."
            },
            "selected": {
                "type": "boolean",
                "description": "Whether the option is initially selected."
            },
            "value": {
                "type": "string",
                "description": "Value to be submitted if the option is selected."
            }
        }
    },
    "textarea": {
        "description": "Represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text.",
        "attributes": {
            "autocomplete": {
                "type": "string",
                "description": "Hint for form autofill feature."
            },
            "cols": {
                "type": "integer",
                "description": "The visible width of the text control, in average character widths."
            },
            "dirname": {
                "type": "string",
                "description": "Name of form field to use for sending the element's directionality."
            },
            "disabled": {
                "type": "boolean",
                "description": "Whether the form control is disabled."
            },
            "form": {
                "type": "string",
                "description": "Associates the control with a form element."
            },
            "maxlength": {
                "type": "integer",
                "description": "Maximum length of value."
            },
            "minlength": {
                "type": "integer",
                "description": "Minimum length of value."
            },
            "name": {
                "type": "string",
                "description": "Name of the control."
            },
            "placeholder": {
                "type": "string",
                "description": "Text that appears in the control when empty."
            },
            "readonly": {
                "type": "boolean",
                "description": "Whether the value can be edited."
            },
            "required": {
                "type": "boolean",
                "description": "Whether the control is required."
            },
            "rows": {
                "type": "integer",
                "description": "The number of visible text lines."
            },
            "wrap": {
                "type": "string",
                "description": "How the control wraps text (soft, hard)."
            }
        }
    },
    "output": {
        "description": "Represents the result of a calculation or user action.",
        "attributes": {
            "for": {
                "type": "string",
                "description": "Space-separated IDs of other elements associated with the calculation."
            },
            "form": {
                "type": "string",
                "description": "Associates the element with a form element."
            },
            "name": {
                "type": "string",
                "description": "Name of the element."
            }
        }
    },
    "progress": {
        "description": "Displays an indicator showing the completion progress of a task.",
        "attributes": {
            "max": {
                "type": "number",
                "description": "The upper bound of the range (default 1)."
            },
            "value": {
                "type": "number",
                "description": "The current progress value."
            }
        }
    },
    "meter": {
        "description": "Represents either a scalar value within a known range or a fractional value.",
        "attributes": {
            "value": {
                "type": "number",
                "description": "The current numeric value."
            },
            "min": {
                "type": "number",
                "description": "The lower bound of the range (default 0)."
            },
            "max": {
                "type": "number",
                "description": "The upper bound of the range (default 1)."
            },
            "low": {
                "type": "number",
                "description": "The upper bound of the low range."
            },
            "high": {
                "type": "number",
                "description": "The lower bound of the high range."
            },
            "optimum": {
                "type": "number",
                "description": "The optimal numeric value."
            }
        }
    },
    "fieldset": {
        "description": "Used to group several controls as well as labels within a web form.",
        "attributes": {
            "disabled": {
                "type": "boolean",
                "description": "Disables all form controls within the fieldset."
            },
            "form": {
                "type": "string",
                "description": "The id of a form this fieldset belongs to."
            },
            "name": {
                "type": "string",
                "description": "Name of the fieldset."
            }
        }
    },
    "legend": {
        "description": "Represents a caption for the content of its parent fieldset.",
        "attributes": {}
    },
    // Interactive elements
    "details": {
        "description": "Represents a disclosure widget from which the user can obtain additional information or controls.",
        "attributes": {
            "open": {
                "type": "boolean",
                "description": "Indicates whether the details are visible."
            }
        }
    },
    "summary": {
        "description": "Specifies a summary, caption, or legend for a details element's disclosure box.",
        "attributes": {}
    },
    "dialog": {
        "description": "Represents a dialog box or other interactive component, such as a dismissible alert, inspector, or subwindow.",
        "attributes": {
            "open": {
                "type": "boolean",
                "description": "Indicates that the dialog is active and can be interacted with."
            }
        }
    },
    // Scripting
    "script": {
        "description": "Used to embed executable code or data; this is typically used to embed or refer to JavaScript code.",
        "attributes": {
            "async": {
                "type": "boolean",
                "description": "Execute script asynchronously."
            },
            "crossorigin": {
                "type": "string",
                "description": "How the element handles crossorigin requests."
            },
            "defer": {
                "type": "boolean",
                "description": "Defer execution until after the page has been parsed."
            },
            "integrity": {
                "type": "string",
                "description": "Security policy for subresource integrity."
            },
            "nomodule": {
                "type": "boolean",
                "description": "Prevents execution in user agents that support module scripts."
            },
            "referrerpolicy": {
                "type": "string",
                "description": "Referrer policy for fetches initiated by the element."
            },
            "src": {
                "type": "string",
                "description": "URL of an external script."
            },
            "type": {
                "type": "string",
                "description": "Type of script (e.g., text/javascript, module)."
            }
        }
    },
    "noscript": {
        "description": "Defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser.",
        "attributes": {}
    },
    "template": {
        "description": "A mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript.",
        "attributes": {}
    },
    "slot": {
        "description": "A placeholder inside a web component that you can fill with your own markup.",
        "attributes": {
            "name": {
                "type": "string",
                "description": "The name of the slot."
            }
        }
    }
}