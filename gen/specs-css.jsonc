// @ generated by Grok 4 (Expert)
// DO NOT EDIT. DO NOT EDIT. DO NOT EDIT. DO NOT EDIT. DO NOT EDIT.
// DO NOT EDIT. DO NOT EDIT. DO NOT EDIT. DO NOT EDIT. DO NOT EDIT.
// 
// This is a comprehensive JSON representation of CSS properties based on standard specifications.
// Descriptions are brief summaries of what the property does.
// Types are inferred: 'enum' for keyword lists, 'number' for numeric (float/int), 'integer' for integers only, 'string' for strings, 'length' for length values, 'color' for colors, 'complex' for more advanced syntax.
// For enum, 'values' lists possible keywords; for complex, description explains the syntax.
// Not all properties have full values listed if they are infinite (e.g., colors, lengths), but examples are given.
// This covers major CSS properties as of 2025; vendor-prefixed are omitted unless standard.
// Source: Based on MDN and W3C specs.
{
    "accent-color": {
        "type": "color",
        "description": "Sets the accent color for user-interface controls like checkboxes and radio buttons."
    },
    "align-content": {
        "type": "enum",
        "description": "Aligns a flex container's lines within the flex container when there is extra space in the cross-axis.",
        "values": [
            "flex-start",
            "flex-end",
            "center",
            "space-between",
            "space-around",
            "space-evenly"
        ]
    },
    "align-items": {
        "type": "enum",
        "description": "Sets the default alignment in the cross axis for all of the flex container's items.",
        "values": [
            "flex-start",
            "flex-end",
            "center",
            "baseline",
            "stretch"
        ]
    },
    "align-self": {
        "type": "enum",
        "description": "Overrides a flex item's align-items value.",
        "values": [
            "auto",
            "flex-start",
            "flex-end",
            "center",
            "baseline",
            "stretch"
        ]
    },
    "all": {
        "type": "enum",
        "description": "Resets all properties (except unicode-bidi and direction) to their initial or inherited values.",
        "values": [
            "initial",
            "inherit",
            "unset",
            "revert"
        ]
    },
    "animation": {
        "type": "complex",
        "description": [
            "Shorthand for setting all animation properties.",
            "Syntax: `<time> || <timing-function> || <time> || <integer> || <animation-direction> || <animation-fill-mode> || <animation-play-state> || [<string> | none]`"
        ]
    },
    "animation-delay": {
        "type": "time",
        "description": "Specifies a delay for the start of an animation."
    },
    "animation-direction": {
        "type": "enum",
        "description": "Specifies whether an animation should be played forwards, backwards or in alternate cycles.",
        "values": [
            "normal",
            "reverse",
            "alternate",
            "alternate-reverse"
        ]
    },
    "animation-duration": {
        "type": "time",
        "description": "Specifies how long an animation should take to complete one cycle."
    },
    "animation-fill-mode": {
        "type": "enum",
        "description": "Specifies a style for the element when the animation is not playing.",
        "values": [
            "none",
            "forwards",
            "backwards",
            "both"
        ]
    },
    "animation-iteration-count": {
        "type": "number",
        "description": "Specifies the number of times an animation should be played. Can be 'infinite'."
    },
    "animation-name": {
        "type": "string",
        "description": "Specifies the name of the @keyframes animation."
    },
    "animation-play-state": {
        "type": "enum",
        "description": "Specifies whether the animation is running or paused.",
        "values": [
            "paused",
            "running"
        ]
    },
    "animation-timing-function": {
        "type": "enum",
        "description": "Specifies the speed curve of an animation.",
        "values": [
            "ease",
            "linear",
            "ease-in",
            "ease-out",
            "ease-in-out",
            "step-start",
            "step-end" /* or cubic-bezier */
        ]
    },
    "aspect-ratio": {
        "type": "complex",
        "description": "Specifies a preferred aspect ratio for the box."
    },
    "backdrop-filter": {
        "type": "complex",
        "description": "Applies graphical effects like blur or color shift to the area behind an element."
    },
    "backface-visibility": {
        "type": "enum",
        "description": "Specifies whether or not the back face of an element is visible when turned towards the user.",
        "values": [
            "visible",
            "hidden"
        ]
    },
    "background": {
        "type": "complex",
        "description": "Shorthand for setting all background properties."
    },
    "background-attachment": {
        "type": "enum",
        "description": "Specifies whether the background image is fixed or scrolls with the page.",
        "values": [
            "scroll",
            "fixed",
            "local"
        ]
    },
    "background-blend-mode": {
        "type": "enum",
        "description": "Specifies the blending mode of each background layer.",
        "values": [
            "normal",
            "multiply",
            "screen" /* and more */
        ]
    },
    "background-clip": {
        "type": "enum",
        "description": "Specifies the painting area of the background.",
        "values": [
            "border-box",
            "padding-box",
            "content-box"
        ]
    },
    "background-color": {
        "type": "color",
        "description": "Specifies the background color of an element."
    },
    "background-image": {
        "type": "url",
        "description": "Specifies one or more background images for an element."
    },
    "background-origin": {
        "type": "enum",
        "description": "Specifies where the background image is positioned.",
        "values": [
            "padding-box",
            "border-box",
            "content-box"
        ]
    },
    "background-position": {
        "type": "complex",
        "description": "Specifies the position of the background image."
    },
    "background-position-x": {
        "type": "complex",
        "description": "Specifies the x-position of the background image."
    },
    "background-position-y": {
        "type": "complex",
        "description": "Specifies the y-position of the background image."
    },
    "background-repeat": {
        "type": "enum",
        "description": "Specifies how the background image is repeated.",
        "values": [
            "repeat",
            "repeat-x",
            "repeat-y",
            "no-repeat",
            "space",
            "round"
        ]
    },
    "background-size": {
        "type": "complex",
        "description": "Specifies the size of the background image."
    },
    "block-size": {
        "type": "length",
        "description": "Specifies the block size of an element, depending on writing mode."
    },
    "border": {
        "type": "complex",
        "description": "Shorthand for setting all border properties."
    },
    "border-block": {
        "type": "complex",
        "description": "Shorthand for border-block-width, border-block-style, border-block-color."
    },
    "border-block-color": {
        "type": "color",
        "description": "Sets the color of the borders at the block start and end."
    },
    "border-block-end": {
        "type": "complex",
        "description": "Shorthand for border-block-end-width, border-block-end-style, border-block-end-color."
    },
    "border-block-end-color": {
        "type": "color",
        "description": "Sets the color of the border at the block end."
    },
    "border-block-end-style": {
        "type": "enum",
        "description": "Sets the style of the border at the block end.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-block-end-width": {
        "type": "length",
        "description": "Sets the width of the border at the block end."
    },
    "border-block-start": {
        "type": "complex",
        "description": "Shorthand for border-block-start-width, border-block-start-style, border-block-start-color."
    },
    "border-block-start-color": {
        "type": "color",
        "description": "Sets the color of the border at the block start."
    },
    "border-block-start-style": {
        "type": "enum",
        "description": "Sets the style of the border at the block start.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-block-start-width": {
        "type": "length",
        "description": "Sets the width of the border at the block start."
    },
    "border-block-style": {
        "type": "enum",
        "description": "Sets the style of the borders at the block start and end.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-block-width": {
        "type": "length",
        "description": "Sets the width of the borders at the block start and end."
    },
    "border-bottom": {
        "type": "complex",
        "description": "Shorthand for border-bottom-width, border-bottom-style, border-bottom-color."
    },
    "border-bottom-color": {
        "type": "color",
        "description": "Sets the color of the bottom border."
    },
    "border-bottom-left-radius": {
        "type": "length",
        "description": "Sets the rounding of the bottom-left corner of the border."
    },
    "border-bottom-right-radius": {
        "type": "length",
        "description": "Sets the rounding of the bottom-right corner of the border."
    },
    "border-bottom-style": {
        "type": "enum",
        "description": "Sets the style of the bottom border.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-bottom-width": {
        "type": "length",
        "description": "Sets the width of the bottom border."
    },
    "border-collapse": {
        "type": "enum",
        "description": "Specifies whether table borders should be collapsed.",
        "values": [
            "separate",
            "collapse"
        ]
    },
    "border-color": {
        "type": "color",
        "description": "Sets the color of the four borders."
    },
    "border-end-end-radius": {
        "type": "length",
        "description": "Sets the rounding of the logical border radius at the end-end corner."
    },
    "border-end-start-radius": {
        "type": "length",
        "description": "Sets the rounding of the logical border radius at the end-start corner."
    },
    "border-image": {
        "type": "complex",
        "description": "Shorthand for setting all border-image properties."
    },
    "border-image-outset": {
        "type": "number",
        "description": "Specifies the amount by which the border image area extends beyond the border box."
    },
    "border-image-repeat": {
        "type": "enum",
        "description": "Specifies how the border image is repeated.",
        "values": [
            "stretch",
            "repeat",
            "round",
            "space"
        ]
    },
    "border-image-slice": {
        "type": "number",
        "description": "Specifies how to slice the border image."
    },
    "border-image-source": {
        "type": "url",
        "description": "Specifies the source image for the border."
    },
    "border-image-width": {
        "type": "length",
        "description": "Specifies the width of the border image."
    },
    "border-inline": {
        "type": "complex",
        "description": "Shorthand for border-inline-width, border-inline-style, border-inline-color."
    },
    "border-inline-color": {
        "type": "color",
        "description": "Sets the color of the borders at the inline start and end."
    },
    "border-inline-end": {
        "type": "complex",
        "description": "Shorthand for border-inline-end-width, border-inline-end-style, border-inline-end-color."
    },
    "border-inline-end-color": {
        "type": "color",
        "description": "Sets the color of the border at the inline end."
    },
    "border-inline-end-style": {
        "type": "enum",
        "description": "Sets the style of the border at the inline end.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-inline-end-width": {
        "type": "length",
        "description": "Sets the width of the border at the inline end."
    },
    "border-inline-start": {
        "type": "complex",
        "description": "Shorthand for border-inline-start-width, border-inline-start-style, border-inline-start-color."
    },
    "border-inline-start-color": {
        "type": "color",
        "description": "Sets the color of the border at the inline start."
    },
    "border-inline-start-style": {
        "type": "enum",
        "description": "Sets the style of the border at the inline start.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-inline-start-width": {
        "type": "length",
        "description": "Sets the width of the border at the inline start."
    },
    "border-inline-style": {
        "type": "enum",
        "description": "Sets the style of the borders at the inline start and end.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-inline-width": {
        "type": "length",
        "description": "Sets the width of the borders at the inline start and end."
    },
    "border-left": {
        "type": "complex",
        "description": "Shorthand for border-left-width, border-left-style, border-left-color."
    },
    "border-left-color": {
        "type": "color",
        "description": "Sets the color of the left border."
    },
    "border-left-style": {
        "type": "enum",
        "description": "Sets the style of the left border.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-left-width": {
        "type": "length",
        "description": "Sets the width of the left border."
    },
    "border-radius": {
        "type": "length",
        "description": "Shorthand for setting all border radius properties."
    },
    "border-right": {
        "type": "complex",
        "description": "Shorthand for border-right-width, border-right-style, border-right-color."
    },
    "border-right-color": {
        "type": "color",
        "description": "Sets the color of the right border."
    },
    "border-right-style": {
        "type": "enum",
        "description": "Sets the style of the right border.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-right-width": {
        "type": "length",
        "description": "Sets the width of the right border."
    },
    "border-spacing": {
        "type": "length",
        "description": "Sets the distance between the borders of adjacent table cells."
    },
    "border-style": {
        "type": "enum",
        "description": "Sets the style of the four borders.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-top": {
        "type": "complex",
        "description": "Shorthand for border-top-width, border-top-style, border-top-color."
    },
    "border-top-color": {
        "type": "color",
        "description": "Sets the color of the top border."
    },
    "border-top-left-radius": {
        "type": "length",
        "description": "Sets the rounding of the top-left corner of the border."
    },
    "border-top-right-radius": {
        "type": "length",
        "description": "Sets the rounding of the top-right corner of the border."
    },
    "border-top-style": {
        "type": "enum",
        "description": "Sets the style of the top border.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "border-top-width": {
        "type": "length",
        "description": "Sets the width of the top border."
    },
    "border-width": {
        "type": "length",
        "description": "Sets the width of the four borders."
    },
    "bottom": {
        "type": "length",
        "description": "Specifies the offset of an absolutely positioned element from the bottom of the container."
    },
    "box-decoration-break": {
        "type": "enum",
        "description": "Specifies how an element's fragments should be rendered when broken across multiple lines.",
        "values": [
            "slice",
            "clone"
        ]
    },
    "box-shadow": {
        "type": "complex",
        "description": "Attaches one or more shadows to an element."
    },
    "box-sizing": {
        "type": "enum",
        "description": "Specifies how the width and height of an element is calculated.",
        "values": [
            "content-box",
            "border-box"
        ]
    },
    "break-after": {
        "type": "enum",
        "description": "Specifies whether a page, column, or region break should occur after the specified element.",
        "values": [
            "auto",
            "avoid",
            "always" /* and more */
        ]
    },
    "break-before": {
        "type": "enum",
        "description": "Specifies whether a page, column, or region break should occur before the specified element.",
        "values": [
            "auto",
            "avoid",
            "always" /* and more */
        ]
    },
    "break-inside": {
        "type": "enum",
        "description": "Specifies whether a page, column, or region break should occur inside the specified element.",
        "values": [
            "auto",
            "avoid"
        ]
    },
    "caption-side": {
        "type": "enum",
        "description": "Specifies the position of a table caption.",
        "values": [
            "top",
            "bottom"
        ]
    },
    "caret-color": {
        "type": "color",
        "description": "Specifies the color of the cursor (caret) in inputs, textareas, or editable content."
    },
    "clear": {
        "type": "enum",
        "description": "Specifies on which sides of an element floating elements are not allowed to float.",
        "values": [
            "none",
            "left",
            "right",
            "both"
        ]
    },
    "clip-path": {
        "type": "complex",
        "description": "Creates a clipping region that determines what part of an element is visible."
    },
    "color": {
        "type": "color",
        "description": "Sets the color of text."
    },
    "column-count": {
        "type": "integer",
        "description": "Specifies the number of columns an element should be divided into."
    },
    "column-fill": {
        "type": "enum",
        "description": "Specifies how to fill columns.",
        "values": [
            "balance",
            "auto"
        ]
    },
    "column-gap": {
        "type": "length",
        "description": "Specifies the gap between the columns."
    },
    "column-rule": {
        "type": "complex",
        "description": "Shorthand for column-rule-width, column-rule-style, column-rule-color."
    },
    "column-rule-color": {
        "type": "color",
        "description": "Specifies the color of the rule between columns."
    },
    "column-rule-style": {
        "type": "enum",
        "description": "Specifies the style of the rule between columns.",
        "values": [
            "none",
            "hidden",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "column-rule-width": {
        "type": "length",
        "description": "Specifies the width of the rule between columns."
    },
    "column-span": {
        "type": "enum",
        "description": "Specifies how many columns an element should span across.",
        "values": [
            "none",
            "all"
        ]
    },
    "column-width": {
        "type": "length",
        "description": "Specifies the optimal width of the columns."
    },
    "columns": {
        "type": "complex",
        "description": "Shorthand for column-width and column-count."
    },
    "contain": {
        "type": "enum",
        "description": "Signals that an element and its contents are independent of the rest of the document tree.",
        "values": [
            "none",
            "strict",
            "content",
            "size",
            "layout",
            "style",
            "paint"
        ]
    },
    "content": {
        "type": "string",
        "description": "Used with ::before and ::after pseudo-elements to insert content."
    },
    "counter-increment": {
        "type": "string",
        "description": "Increments one or more counters."
    },
    "counter-reset": {
        "type": "string",
        "description": "Creates or resets one or more counters."
    },
    "counter-set": {
        "type": "string",
        "description": "Sets one or more counters to a specified value."
    },
    "cursor": {
        "type": "enum",
        "description": "Specifies the mouse cursor to be displayed when pointing over an element.",
        "values": [
            "auto",
            "default",
            "pointer",
            "text" /* and more */
        ]
    },
    "direction": {
        "type": "enum",
        "description": "Specifies the text direction/writing direction.",
        "values": [
            "ltr",
            "rtl"
        ]
    },
    "display": {
        "type": "enum",
        "description": "Specifies how an element is displayed.",
        "values": [
            "block",
            "inline",
            "inline-block",
            "flex",
            "grid",
            "none" /* and more */
        ]
    },
    "empty-cells": {
        "type": "enum",
        "description": "Specifies whether or not to display borders and background on empty cells in a table.",
        "values": [
            "show",
            "hide"
        ]
    },
    "filter": {
        "type": "complex",
        "description": "Applies graphical effects like blur or color shift to an element."
    },
    "flex": {
        "type": "complex",
        "description": "Shorthand for flex-grow, flex-shrink, flex-basis."
    },
    "flex-basis": {
        "type": "length",
        "description": "Specifies the initial length of a flex item."
    },
    "flex-direction": {
        "type": "enum",
        "description": "Specifies the direction of the flexible items.",
        "values": [
            "row",
            "row-reverse",
            "column",
            "column-reverse"
        ]
    },
    "flex-flow": {
        "type": "complex",
        "description": "Shorthand for flex-direction and flex-wrap."
    },
    "flex-grow": {
        "type": "number",
        "description": "Specifies how much the item will grow relative to the rest."
    },
    "flex-shrink": {
        "type": "number",
        "description": "Specifies how much the item will shrink relative to the rest."
    },
    "flex-wrap": {
        "type": "enum",
        "description": "Specifies whether the flexible items should wrap or not.",
        "values": [
            "nowrap",
            "wrap",
            "wrap-reverse"
        ]
    },
    "float": {
        "type": "enum",
        "description": "Specifies whether an element should float to the left, right, or not at all.",
        "values": [
            "none",
            "left",
            "right"
        ]
    },
    "font": {
        "type": "complex",
        "description": "Shorthand for setting all font properties."
    },
    "font-family": {
        "type": "string",
        "description": "Specifies the font family for text."
    },
    "font-feature-settings": {
        "type": "string",
        "description": "Controls advanced typographic features in OpenType fonts."
    },
    "font-kerning": {
        "type": "enum",
        "description": "Controls the usage of the kerning information.",
        "values": [
            "auto",
            "normal",
            "none"
        ]
    },
    "font-language-override": {
        "type": "string",
        "description": "Controls the use of language-specific glyphs in a typeface."
    },
    "font-optical-sizing": {
        "type": "enum",
        "description": "Enables automatic adjustments to font designs for different sizes.",
        "values": [
            "auto",
            "none"
        ]
    },
    "font-size": {
        "type": "length",
        "description": "Specifies the font size of text."
    },
    "font-size-adjust": {
        "type": "number",
        "description": "Preserves the readability of text when font fallback occurs."
    },
    "font-stretch": {
        "type": "enum",
        "description": "Selects a normal, condensed, or expanded face from a font.",
        "values": [
            "normal",
            "ultra-condensed",
            "extra-condensed",
            "condensed",
            "semi-condensed",
            "semi-expanded",
            "expanded",
            "extra-expanded",
            "ultra-expanded"
        ]
    },
    "font-style": {
        "type": "enum",
        "description": "Specifies the font style for text.",
        "values": [
            "normal",
            "italic",
            "oblique"
        ]
    },
    "font-synthesis": {
        "type": "enum",
        "description": "Controls which missing typefaces can be synthesized by the browser.",
        "values": [
            "none",
            "weight",
            "style"
        ]
    },
    "font-variant": {
        "type": "enum",
        "description": "Specifies whether or not a text should be in small-caps.",
        "values": [
            "normal",
            "small-caps"
        ]
    },
    "font-variant-alternates": {
        "type": "string",
        "description": "Controls the usage of alternate glyphs."
    },
    "font-variant-caps": {
        "type": "enum",
        "description": "Controls the usage of alternate glyphs for capital letters.",
        "values": [
            "normal",
            "small-caps",
            "all-small-caps",
            "petite-caps",
            "all-petite-caps",
            "unicase",
            "titling-caps"
        ]
    },
    "font-variant-east-asian": {
        "type": "enum",
        "description": "Controls the usage of alternate glyphs for East Asian scripts.",
        "values": [
            "normal",
            "ruby" /* and more */
        ]
    },
    "font-variant-ligatures": {
        "type": "enum",
        "description": "Controls which ligatures and contextual forms are used in textual content.",
        "values": [
            "normal",
            "none",
            "common-ligatures" /* and more */
        ]
    },
    "font-variant-numeric": {
        "type": "enum",
        "description": "Controls the usage of alternate glyphs for numbers, fractions, and ordinal markers.",
        "values": [
            "normal",
            "ordinal",
            "slashed-zero" /* and more */
        ]
    },
    "font-variant-position": {
        "type": "enum",
        "description": "Controls the usage of alternate, smaller glyphs that are positioned as superscript or subscript.",
        "values": [
            "normal",
            "sub",
            "super"
        ]
    },
    "font-variation-settings": {
        "type": "string",
        "description": "Allows low-level control over variable font characteristics."
    },
    "font-weight": {
        "type": "enum",
        "description": "Specifies the weight of the font.",
        "values": [
            "normal",
            "bold",
            "bolder",
            "lighter",
            "100",
            "200" /* up to 900 */
        ]
    },
    "gap": {
        "type": "length",
        "description": "Shorthand for row-gap and column-gap."
    },
    "grid": {
        "type": "complex",
        "description": "Shorthand for setting all grid properties."
    },
    "grid-area": {
        "type": "complex",
        "description": "Specifies a grid item's size and location within the grid."
    },
    "grid-auto-columns": {
        "type": "complex",
        "description": "Specifies the size of an implicitly-created grid column track."
    },
    "grid-auto-flow": {
        "type": "enum",
        "description": "Controls how the auto-placement algorithm works.",
        "values": [
            "row",
            "column",
            "dense"
        ]
    },
    "grid-auto-rows": {
        "type": "complex",
        "description": "Specifies the size of an implicitly-created grid row track."
    },
    "grid-column": {
        "type": "complex",
        "description": "Shorthand for grid-column-start and grid-column-end."
    },
    "grid-column-end": {
        "type": "integer",
        "description": "Specifies where to end the grid item in the grid column."
    },
    "grid-column-gap": {
        "type": "length",
        "description": "Specifies the size of the gap between columns."
    },
    "grid-column-start": {
        "type": "integer",
        "description": "Specifies where to start the grid item in the grid column."
    },
    "grid-gap": {
        "type": "length",
        "description": "Shorthand for grid-row-gap and grid-column-gap."
    },
    "grid-row": {
        "type": "complex",
        "description": "Shorthand for grid-row-start and grid-row-end."
    },
    "grid-row-end": {
        "type": "integer",
        "description": "Specifies where to end the grid item in the grid row."
    },
    "grid-row-gap": {
        "type": "length",
        "description": "Specifies the size of the gap between rows."
    },
    "grid-row-start": {
        "type": "integer",
        "description": "Specifies where to start the grid item in the grid row."
    },
    "grid-template": {
        "type": "complex",
        "description": "Shorthand for grid-template-rows, grid-template-columns, grid-template-areas."
    },
    "grid-template-areas": {
        "type": "string",
        "description": "Specifies named grid areas."
    },
    "grid-template-columns": {
        "type": "complex",
        "description": "Specifies the size of the columns, and how many columns in a grid layout."
    },
    "grid-template-rows": {
        "type": "complex",
        "description": "Specifies the size of the rows in a grid layout."
    },
    "hanging-punctuation": {
        "type": "enum",
        "description": "Specifies whether a punctuation mark may be placed outside the line box.",
        "values": [
            "none",
            "first",
            "last",
            "allow-end",
            "force-end"
        ]
    },
    "height": {
        "type": "length",
        "description": "Specifies the height of an element."
    },
    "hyphens": {
        "type": "enum",
        "description": "Specifies how words should be hyphenated.",
        "values": [
            "none",
            "manual",
            "auto"
        ]
    },
    "hypen-ate-character": {
        "type": "string",
        "description": "Specifies a string that is used as the hyphenation character."
    },
    "image-orientation": {
        "type": "enum",
        "description": "Specifies a rotation to be applied to an image before it is drawn.",
        "values": [
            "none",
            "from-image"
        ]
    },
    "image-rendering": {
        "type": "enum",
        "description": "Specifies the rendering quality of images.",
        "values": [
            "auto",
            "smooth",
            "high-quality",
            "crisp-edges",
            "pixelated"
        ]
    },
    "inline-size": {
        "type": "length",
        "description": "Specifies the inline size of an element, depending on writing mode."
    },
    "inset": {
        "type": "length",
        "description": "Shorthand for top, right, bottom, left for absolutely positioned elements."
    },
    "inset-block": {
        "type": "length",
        "description": "Specifies the position offset in the block direction."
    },
    "inset-block-end": {
        "type": "length",
        "description": "Specifies the position offset from the block end."
    },
    "inset-block-start": {
        "type": "length",
        "description": "Specifies the position offset from the block start."
    },
    "inset-inline": {
        "type": "length",
        "description": "Specifies the position offset in the inline direction."
    },
    "inset-inline-end": {
        "type": "length",
        "description": "Specifies the position offset from the inline end."
    },
    "inset-inline-start": {
        "type": "length",
        "description": "Specifies the position offset from the inline start."
    },
    "isolation": {
        "type": "enum",
        "description": "Defines whether an element must create a new stacking context.",
        "values": [
            "auto",
            "isolate"
        ]
    },
    "justify-content": {
        "type": "enum",
        "description": "Aligns the flexible container's items when the items do not use all available space on the main-axis.",
        "values": [
            "flex-start",
            "flex-end",
            "center",
            "space-between",
            "space-around",
            "space-evenly"
        ]
    },
    "justify-items": {
        "type": "enum",
        "description": "Sets the default justify-self for all items of the box.",
        "values": [
            "auto",
            "normal",
            "stretch" /* and more */
        ]
    },
    "justify-self": {
        "type": "enum",
        "description": "Sets the way a box is justified inside its alignment container along the appropriate axis.",
        "values": [
            "auto",
            "normal",
            "stretch" /* and more */
        ]
    },
    "left": {
        "type": "length",
        "description": "Specifies the offset of an absolutely positioned element from the left of the container."
    },
    "letter-spacing": {
        "type": "length",
        "description": "Increases or decreases the space between characters in a text."
    },
    "line-break": {
        "type": "enum",
        "description": "Specifies how to break lines of Chinese, Japanese, or Korean text.",
        "values": [
            "auto",
            "loose",
            "normal",
            "strict",
            "anywhere"
        ]
    },
    "line-height": {
        "type": "number",
        "description": "Sets the line height."
    },
    "list-style": {
        "type": "complex",
        "description": "Shorthand for list-style-type, list-style-position, list-style-image."
    },
    "list-style-image": {
        "type": "url",
        "description": "Specifies an image as the list-item marker."
    },
    "list-style-position": {
        "type": "enum",
        "description": "Specifies the position of the list-item markers.",
        "values": [
            "inside",
            "outside"
        ]
    },
    "list-style-type": {
        "type": "enum",
        "description": "Specifies the type of list-item marker.",
        "values": [
            "disc",
            "circle",
            "square",
            "decimal",
            "none" /* and more */
        ]
    },
    "margin": {
        "type": "length",
        "description": "Shorthand for margin-top, margin-right, margin-bottom, margin-left."
    },
    "margin-block": {
        "type": "length",
        "description": "Specifies the margin in the block direction."
    },
    "margin-block-end": {
        "type": "length",
        "description": "Specifies the margin at the block end."
    },
    "margin-block-start": {
        "type": "length",
        "description": "Specifies the margin at the block start."
    },
    "margin-bottom": {
        "type": "length",
        "description": "Sets the bottom margin of an element."
    },
    "margin-inline": {
        "type": "length",
        "description": "Specifies the margin in the inline direction."
    },
    "margin-inline-end": {
        "type": "length",
        "description": "Specifies the margin at the inline end."
    },
    "margin-inline-start": {
        "type": "length",
        "description": "Specifies the margin at the inline start."
    },
    "margin-left": {
        "type": "length",
        "description": "Sets the left margin of an element."
    },
    "margin-right": {
        "type": "length",
        "description": "Sets the right margin of an element."
    },
    "margin-top": {
        "type": "length",
        "description": "Sets the top margin of an element."
    },
    "mask": {
        "type": "complex",
        "description": "Shorthand for mask-image, mask-mode, mask-position, mask-size, mask-repeat, mask-origin, mask-clip, mask-composite."
    },
    "mask-clip": {
        "type": "enum",
        "description": "Specifies the mask painting area.",
        "values": [
            "content-box",
            "padding-box",
            "border-box" /* and more */
        ]
    },
    "mask-composite": {
        "type": "enum",
        "description": "Specifies how mask layers are composited.",
        "values": [
            "add",
            "subtract",
            "intersect",
            "exclude"
        ]
    },
    "mask-image": {
        "type": "url",
        "description": "Specifies the mask image."
    },
    "mask-mode": {
        "type": "enum",
        "description": "Specifies whether the mask layer image is treated as a luminance or alpha mask.",
        "values": [
            "alpha",
            "luminance",
            "match-source"
        ]
    },
    "mask-origin": {
        "type": "enum",
        "description": "Specifies the origin position of a mask image.",
        "values": [
            "content-box",
            "padding-box",
            "border-box"
        ]
    },
    "mask-position": {
        "type": "complex",
        "description": "Specifies the initial position of a mask image."
    },
    "mask-repeat": {
        "type": "enum",
        "description": "Specifies how the mask image is repeated.",
        "values": [
            "repeat",
            "repeat-x",
            "repeat-y",
            "no-repeat",
            "space",
            "round"
        ]
    },
    "mask-size": {
        "type": "complex",
        "description": "Specifies the size of the mask image."
    },
    "max-block-size": {
        "type": "length",
        "description": "Sets the maximum size of an element in the block direction."
    },
    "max-height": {
        "type": "length",
        "description": "Sets the maximum height of an element."
    },
    "max-inline-size": {
        "type": "length",
        "description": "Sets the maximum size of an element in the inline direction."
    },
    "max-width": {
        "type": "length",
        "description": "Sets the maximum width of an element."
    },
    "min-block-size": {
        "type": "length",
        "description": "Sets the minimum size of an element in the block direction."
    },
    "min-height": {
        "type": "length",
        "description": "Sets the minimum height of an element."
    },
    "min-inline-size": {
        "type": "length",
        "description": "Sets the minimum size of an element in the inline direction."
    },
    "min-width": {
        "type": "length",
        "description": "Sets the minimum width of an element."
    },
    "mix-blend-mode": {
        "type": "enum",
        "description": "Specifies how an element's content should blend with the content of the element's parent and background.",
        "values": [
            "normal",
            "multiply",
            "screen" /* and more */
        ]
    },
    "object-fit": {
        "type": "enum",
        "description": "Specifies how the contents of a replaced element should be fitted to the box established by its used height and width.",
        "values": [
            "fill",
            "contain",
            "cover",
            "none",
            "scale-down"
        ]
    },
    "object-position": {
        "type": "complex",
        "description": "Specifies the alignment of the replaced element's contents within the element's box."
    },
    "offset": {
        "type": "complex",
        "description": "Shorthand for offset-path, offset-distance, offset-rotate, offset-anchor."
    },
    "offset-anchor": {
        "type": "complex",
        "description": "Specifies a point on the positioned element that is the point that is moved along the offset-path."
    },
    "offset-distance": {
        "type": "length",
        "description": "Specifies the position along an offset-path."
    },
    "offset-path": {
        "type": "complex",
        "description": "Specifies the path an element follows for positioning along an offset."
    },
    "offset-rotate": {
        "type": "complex",
        "description": "Specifies the orientation of the element along the offset-path."
    },
    "opacity": {
        "type": "number",
        "description": "Specifies the transparency of an element."
    },
    "order": {
        "type": "integer",
        "description": "Specifies the order of a flexible item relative to the rest of the flexible items inside the same container."
    },
    "orphans": {
        "type": "integer",
        "description": "Specifies the minimum number of lines that must be left at the bottom of a page or column."
    },
    "outline": {
        "type": "complex",
        "description": "Shorthand for outline-width, outline-style, outline-color."
    },
    "outline-color": {
        "type": "color",
        "description": "Sets the color of an outline."
    },
    "outline-offset": {
        "type": "length",
        "description": "Sets the space between an outline and the edge or border of an element."
    },
    "outline-style": {
        "type": "enum",
        "description": "Sets the style of an outline.",
        "values": [
            "none",
            "dotted",
            "dashed",
            "solid",
            "double",
            "groove",
            "ridge",
            "inset",
            "outset"
        ]
    },
    "outline-width": {
        "type": "length",
        "description": "Sets the width of an outline."
    },
    "overflow": {
        "type": "enum",
        "description": "Specifies what happens if content overflows an element's box.",
        "values": [
            "visible",
            "hidden",
            "scroll",
            "auto"
        ]
    },
    "overflow-anchor": {
        "type": "enum",
        "description": "Opts out of scroll anchoring behavior.",
        "values": [
            "auto",
            "none"
        ]
    },
    "overflow-block": {
        "type": "enum",
        "description": "Specifies what to do when content overflows the block direction.",
        "values": [
            "visible",
            "hidden",
            "scroll",
            "auto"
        ]
    },
    "overflow-clip-margin": {
        "type": "length",
        "description": "Specifies how far the overflow clipping should extend from the element."
    },
    "overflow-inline": {
        "type": "enum",
        "description": "Specifies what to do when content overflows the inline direction.",
        "values": [
            "visible",
            "hidden",
            "scroll",
            "auto"
        ]
    },
    "overflow-wrap": {
        "type": "enum",
        "description": "Specifies whether the browser may break lines within words to prevent overflow.",
        "values": [
            "normal",
            "anywhere",
            "break-word"
        ]
    },
    "overflow-x": {
        "type": "enum",
        "description": "Specifies what to do with the left/right edges of the content if it overflows the element's content area.",
        "values": [
            "visible",
            "hidden",
            "scroll",
            "auto"
        ]
    },
    "overflow-y": {
        "type": "enum",
        "description": "Specifies what to do with the top/bottom edges of the content if it overflows the element's content area.",
        "values": [
            "visible",
            "hidden",
            "scroll",
            "auto"
        ]
    },
    "overscroll-behavior": {
        "type": "enum",
        "description": "Specifies the browser behavior on overscroll.",
        "values": [
            "auto",
            "contain",
            "none"
        ]
    },
    "overscroll-behavior-block": {
        "type": "enum",
        "description": "Specifies the browser behavior on overscroll in the block direction.",
        "values": [
            "auto",
            "contain",
            "none"
        ]
    },
    "overscroll-behavior-inline": {
        "type": "enum",
        "description": "Specifies the browser behavior on overscroll in the inline direction.",
        "values": [
            "auto",
            "contain",
            "none"
        ]
    },
    "overscroll-behavior-x": {
        "type": "enum",
        "description": "Specifies the browser behavior on overscroll in the x direction.",
        "values": [
            "auto",
            "contain",
            "none"
        ]
    },
    "overscroll-behavior-y": {
        "type": "enum",
        "description": "Specifies the browser behavior on overscroll in the y direction.",
        "values": [
            "auto",
            "contain",
            "none"
        ]
    },
    "padding": {
        "type": "length",
        "description": "Shorthand for padding-top, padding-right, padding-bottom, padding-left."
    },
    "padding-block": {
        "type": "length",
        "description": "Specifies the padding in the block direction."
    },
    "padding-block-end": {
        "type": "length",
        "description": "Specifies the padding at the block end."
    },
    "padding-block-start": {
        "type": "length",
        "description": "Specifies the padding at the block start."
    },
    "padding-bottom": {
        "type": "length",
        "description": "Sets the bottom padding of an element."
    },
    "padding-inline": {
        "type": "length",
        "description": "Specifies the padding in the inline direction."
    },
    "padding-inline-end": {
        "type": "length",
        "description": "Specifies the padding at the inline end."
    },
    "padding-inline-start": {
        "type": "length",
        "description": "Specifies the padding at the inline start."
    },
    "padding-left": {
        "type": "length",
        "description": "Sets the left padding of an element."
    },
    "padding-right": {
        "type": "length",
        "description": "Sets the right padding of an element."
    },
    "padding-top": {
        "type": "length",
        "description": "Sets the top padding of an element."
    },
    "page-break-after": {
        "type": "enum",
        "description": "Adjusts page breaks after the current element.",
        "values": [
            "auto",
            "always",
            "avoid",
            "left",
            "right"
        ]
    },
    "page-break-before": {
        "type": "enum",
        "description": "Adjusts page breaks before the current element.",
        "values": [
            "auto",
            "always",
            "avoid",
            "left",
            "right"
        ]
    },
    "page-break-inside": {
        "type": "enum",
        "description": "Adjusts page breaks inside the current element.",
        "values": [
            "auto",
            "avoid"
        ]
    },
    "paint-order": {
        "type": "enum",
        "description": "Controls the order in which paint operations are performed for text and shape elements.",
        "values": [
            "normal",
            "fill",
            "stroke",
            "markers"
        ]
    },
    "perspective": {
        "type": "length",
        "description": "Gives a 3D-positioned element some perspective."
    },
    "perspective-origin": {
        "type": "complex",
        "description": "Defines at which position the user is looking at the 3D-positioned element."
    },
    "place-content": {
        "type": "complex",
        "description": "Shorthand for align-content and justify-content."
    },
    "place-items": {
        "type": "complex",
        "description": "Shorthand for align-items and justify-items."
    },
    "place-self": {
        "type": "complex",
        "description": "Shorthand for align-self and justify-self."
    },
    "pointer-events": {
        "type": "enum",
        "description": "Specifies whether or not element reacts to pointer events.",
        "values": [
            "auto",
            "none"
        ]
    },
    "position": {
        "type": "enum",
        "description": "Specifies the positioning method used for an element (static, relative, absolute, fixed, or sticky).",
        "values": [
            "static",
            "relative",
            "absolute",
            "fixed",
            "sticky"
        ]
    },
    "print-color-adjust": {
        "type": "enum",
        "description": "Controls what, if any, adjustments the user agent may make to optimize the appearance for printing.",
        "values": [
            "economy",
            "exact"
        ]
    },
    "quotes": {
        "type": "string",
        "description": "Sets the type of quotation marks for embedded quotations."
    },
    "resize": {
        "type": "enum",
        "description": "Specifies if (and on which sides) an element is resizable by the user.",
        "values": [
            "none",
            "both",
            "horizontal",
            "vertical"
        ]
    },
    "right": {
        "type": "length",
        "description": "Specifies the offset of an absolutely positioned element from the right of the container."
    },
    "rotate": {
        "type": "complex",
        "description": "Rotates an element around a fixed point on the page."
    },
    "row-gap": {
        "type": "length",
        "description": "Specifies the gap between the grid rows."
    },
    "scale": {
        "type": "number",
        "description": "Scales an element up or down on the 2D plane.",
        "values": [ /* numbers or percentages, e.g., 1 1 1 for x y z, or none */]
    },
    "scroll-behavior": {
        "type": "enum",
        "description": "Specifies whether to smoothly animate the scroll position in a scrollable box.",
        "values": [
            "auto",
            "smooth"
        ]
    },
    "scroll-margin": {
        "type": "length",
        "description": "Shorthand for scroll-margin-top, scroll-margin-right, scroll-margin-bottom, scroll-margin-left."
    },
    "scroll-margin-block": {
        "type": "length",
        "description": "Specifies the scroll margins in the block direction."
    },
    "scroll-margin-block-end": {
        "type": "length",
        "description": "Specifies the scroll margin at the block end."
    },
    "scroll-margin-block-start": {
        "type": "length",
        "description": "Specifies the scroll margin at the block start."
    },
    "scroll-margin-bottom": {
        "type": "length",
        "description": "Specifies the scroll margin at the bottom."
    },
    "scroll-margin-inline": {
        "type": "length",
        "description": "Specifies the scroll margins in the inline direction."
    },
    "scroll-margin-inline-end": {
        "type": "length",
        "description": "Specifies the scroll margin at the inline end."
    },
    "scroll-margin-inline-start": {
        "type": "length",
        "description": "Specifies the scroll margin at the inline start."
    },
    "scroll-margin-left": {
        "type": "length",
        "description": "Specifies the scroll margin at the left."
    },
    "scroll-margin-right": {
        "type": "length",
        "description": "Specifies the scroll margin at the right."
    },
    "scroll-margin-top": {
        "type": "length",
        "description": "Specifies the scroll margin at the top."
    },
    "scroll-padding": {
        "type": "length",
        "description": "Shorthand for scroll-padding-top, scroll-padding-right, scroll-padding-bottom, scroll-padding-left."
    },
    "scroll-padding-block": {
        "type": "length",
        "description": "Specifies the scroll padding in the block direction."
    },
    "scroll-padding-block-end": {
        "type": "length",
        "description": "Specifies the scroll padding at the block end."
    },
    "scroll-padding-block-start": {
        "type": "length",
        "description": "Specifies the scroll padding at the block start."
    },
    "scroll-padding-bottom": {
        "type": "length",
        "description": "Specifies the scroll padding at the bottom."
    },
    "scroll-padding-inline": {
        "type": "length",
        "description": "Specifies the scroll padding in the inline direction."
    },
    "scroll-padding-inline-end": {
        "type": "length",
        "description": "Specifies the scroll padding at the inline end."
    },
    "scroll-padding-inline-start": {
        "type": "length",
        "description": "Specifies the scroll padding at the inline start."
    },
    "scroll-padding-left": {
        "type": "length",
        "description": "Specifies the scroll padding at the left."
    },
    "scroll-padding-right": {
        "type": "length",
        "description": "Specifies the scroll padding at the right."
    },
    "scroll-padding-top": {
        "type": "length",
        "description": "Specifies the scroll padding at the top."
    },
    "scroll-snap-align": {
        "type": "enum",
        "description": "Specifies the box's snap position as an alignment of its snap area within its snap container's snapport.",
        "values": [
            "none",
            "start",
            "end",
            "center"
        ]
    },
    "scroll-snap-stop": {
        "type": "enum",
        "description": "Defines whether the scroll container is allowed to snap to a snap position that is not the first in a sequence of snap positions.",
        "values": [
            "normal",
            "always"
        ]
    },
    "scroll-snap-type": {
        "type": "enum",
        "description": "Defines the strictness of snap positions in a scroll container.",
        "values": [
            "none",
            "x",
            "y",
            "block",
            "inline",
            "both",
            "proximity",
            "mandatory"
        ]
    },
    "scroll-timeline": {
        "type": "complex",
        "description": "Defines a named timeline for scrolling an element."
    },
    "scroll-timeline-axis": {
        "type": "enum",
        "description": "Defines the axis of the scroll timeline.",
        "values": [
            "block",
            "inline",
            "x",
            "y"
        ]
    },
    "scroll-timeline-name": {
        "type": "string",
        "description": "Defines the name of the scroll timeline."
    },
    "scrollbar-color": {
        "type": "color",
        "description": "Specifies the color of the scrollbar track and thumb."
    },
    "scrollbar-gutter": {
        "type": "enum",
        "description": "Reserves space for the scrollbar, preventing unwanted layout changes as the scrollbar appears and disappears.",
        "values": [
            "auto",
            "stable",
            "always"
        ]
    },
    "scrollbar-width": {
        "type": "enum",
        "description": "Specifies the width of the scrollbar.",
        "values": [
            "auto",
            "thin",
            "none"
        ]
    },
    "shape-image-threshold": {
        "type": "number",
        "description": "Defines the alpha channel threshold used to extract the shape using an image."
    },
    "shape-margin": {
        "type": "length",
        "description": "Sets a margin on a shape created with shape-outside."
    },
    "shape-outside": {
        "type": "complex",
        "description": "Defines a shape around which inline content wraps."
    },
    "tab-size": {
        "type": "integer",
        "description": "Specifies the width of a tab character."
    },
    "table-layout": {
        "type": "enum",
        "description": "Specifies the algorithm used to lay out table cells, rows, and columns.",
        "values": [
            "auto",
            "fixed"
        ]
    },
    "text-align": {
        "type": "enum",
        "description": "Specifies the horizontal alignment of text.",
        "values": [
            "left",
            "right",
            "center",
            "justify"
        ]
    },
    "text-align-last": {
        "type": "enum",
        "description": "Describes how the last line of a block or a line right before a forced line break is aligned when text-align is 'justify'.",
        "values": [
            "auto",
            "left",
            "right",
            "center",
            "justify"
        ]
    },
    "text-combine-upright": {
        "type": "enum",
        "description": "Specifies the combination of multiple characters into the space of a single character.",
        "values": [
            "none",
            "all"
        ]
    },
    "text-decoration": {
        "type": "complex",
        "description": "Shorthand for text-decoration-line, text-decoration-color, text-decoration-style, text-decoration-thickness."
    },
    "text-decoration-color": {
        "type": "color",
        "description": "Specifies the color of text decorations."
    },
    "text-decoration-line": {
        "type": "enum",
        "description": "Specifies the type of line in a text decoration.",
        "values": [
            "none",
            "underline",
            "overline",
            "line-through",
            "blink"
        ]
    },
    "text-decoration-skip": {
        "type": "enum",
        "description": "Specifies what parts of the content are skipped over when applying text decoration.",
        "values": [
            "none",
            "objects",
            "spaces",
            "ink",
            "edges",
            "box-decoration"
        ]
    },
    "text-decoration-skip-ink": {
        "type": "enum",
        "description": "Specifies how overlines and underlines are drawn when they pass over glyphs.",
        "values": [
            "auto",
            "none",
            "all"
        ]
    },
    "text-decoration-style": {
        "type": "enum",
        "description": "Specifies the style of the line in a text decoration.",
        "values": [
            "solid",
            "double",
            "dotted",
            "dashed",
            "wavy"
        ]
    },
    "text-decoration-thickness": {
        "type": "length",
        "description": "Specifies the thickness of the text decoration line."
    },
    "text-emphasis": {
        "type": "complex",
        "description": "Shorthand for text-emphasis-style and text-emphasis-color."
    },
    "text-emphasis-color": {
        "type": "color",
        "description": "Specifies the color of emphasis marks."
    },
    "text-emphasis-position": {
        "type": "enum",
        "description": "Specifies the position of emphasis marks.",
        "values": [
            "over",
            "under",
            "right",
            "left"
        ]
    },
    "text-emphasis-style": {
        "type": "string",
        "description": "Specifies the style of emphasis marks."
    },
    "text-indent": {
        "type": "length",
        "description": "Specifies the indentation of the first line in a text-block."
    },
    "text-justify": {
        "type": "enum",
        "description": "Specifies the justification method used when text-align is 'justify'.",
        "values": [
            "auto",
            "inter-character",
            "inter-word",
            "none"
        ]
    },
    "text-orientation": {
        "type": "enum",
        "description": "Defines the orientation of the text in a line.",
        "values": [
            "mixed",
            "upright",
            "sideways"
        ]
    },
    "text-overflow": {
        "type": "enum",
        "description": "Specifies what should happen when text overflows the containing element.",
        "values": [
            "clip",
            "ellipsis"
        ]
    },
    "text-rendering": {
        "type": "enum",
        "description": "Provides information to the browser about what to optimize for when rendering text.",
        "values": [
            "auto",
            "optimizeSpeed",
            "optimizeLegibility",
            "geometricPrecision"
        ]
    },
    "text-shadow": {
        "type": "complex",
        "description": "Adds shadow to text."
    },
    "text-transform": {
        "type": "enum",
        "description": "Controls the capitalization of text.",
        "values": [
            "none",
            "capitalize",
            "uppercase",
            "lowercase",
            "full-width",
            "full-size-kana"
        ]
    },
    "text-underline-offset": {
        "type": "length",
        "description": "Specifies the offset of underlines from their original position."
    },
    "text-underline-position": {
        "type": "enum",
        "description": "Specifies the position of the underline text decoration.",
        "values": [
            "auto",
            "under",
            "left",
            "right"
        ]
    },
    "top": {
        "type": "length",
        "description": "Specifies the offset of an absolutely positioned element from the top of the container."
    },
    "touch-action": {
        "type": "enum",
        "description": "Determines whether touch input may trigger default behavior supplied by the user agent.",
        "values": [
            "auto",
            "none",
            "pan-x",
            "pan-y",
            "manipulation"
        ]
    },
    "transform": {
        "type": "complex",
        "description": "Applies a 2D or 3D transformation to an element."
    },
    "transform-box": {
        "type": "enum",
        "description": "Defines the layout box to which the transform and transform-origin properties relate.",
        "values": [
            "content-box",
            "border-box",
            "fill-box",
            "stroke-box",
            "view-box"
        ]
    },
    "transform-origin": {
        "type": "complex",
        "description": "Changes the position on transformed elements."
    },
    "transform-style": {
        "type": "enum",
        "description": "Specifies whether the children of an element are positioned in 3D space or flattened.",
        "values": [
            "flat",
            "preserve-3d"
        ]
    },
    "transition": {
        "type": "complex",
        "description": "Shorthand for transition-property, transition-duration, transition-timing-function, transition-delay."
    },
    "transition-delay": {
        "type": "time",
        "description": "Specifies when the transition effect will start."
    },
    "transition-duration": {
        "type": "time",
        "description": "Specifies how many seconds or milliseconds a transition effect takes to complete."
    },
    "transition-property": {
        "type": "string",
        "description": "Specifies the name of the CSS property the transition effect is for."
    },
    "transition-timing-function": {
        "type": "enum",
        "description": "Specifies the speed curve of the transition effect.",
        "values": [
            "ease",
            "linear",
            "ease-in",
            "ease-out",
            "ease-in-out"
        ]
    },
    "translate": {
        "type": "complex",
        "description": "Repositions an element in the horizontal and/or vertical directions."
    },
    "unicode-bidi": {
        "type": "enum",
        "description": "Used together with the direction property to set or return whether the text should be overridden to support multiple languages in the same document.",
        "values": [
            "normal",
            "embed",
            "bidi-override"
        ]
    },
    "user-select": {
        "type": "enum",
        "description": "Specifies whether the text of an element can be selected.",
        "values": [
            "auto",
            "text",
            "none",
            "contain",
            "all"
        ]
    },
    "vertical-align": {
        "type": "enum",
        "description": "Sets the vertical alignment of an element.",
        "values": [
            "baseline",
            "sub",
            "super",
            "top",
            "text-top",
            "middle",
            "bottom",
            "text-bottom"
        ]
    },
    "visibility": {
        "type": "enum",
        "description": "Specifies whether or not an element is visible.",
        "values": [
            "visible",
            "hidden",
            "collapse"
        ]
    },
    "white-space": {
        "type": "enum",
        "description": "Specifies how white-space inside an element is handled.",
        "values": [
            "normal",
            "nowrap",
            "pre",
            "pre-line",
            "pre-wrap"
        ]
    },
    "widows": {
        "type": "integer",
        "description": "Sets the minimum number of lines that must be left at the top of a page or column."
    },
    "width": {
        "type": "length",
        "description": "Specifies the width of an element."
    },
    "will-change": {
        "type": "string",
        "description": "Provides a hint to the browser about what properties are expected to change."
    },
    "word-break": {
        "type": "enum",
        "description": "Specifies how words should break when reaching the end of a line.",
        "values": [
            "normal",
            "break-all",
            "keep-all",
            "break-word"
        ]
    },
    "word-spacing": {
        "type": "length",
        "description": "Increases or decreases the space between words in a text."
    },
    "writing-mode": {
        "type": "enum",
        "description": "Specifies whether lines of text are laid out horizontally or vertically.",
        "values": [
            "horizontal-tb",
            "vertical-rl",
            "vertical-lr"
        ]
    },
    "z-index": {
        "type": "integer",
        "description": "Sets the stack order of a positioned element."
    }
    // Many more properties exist, such as vendor-prefixed ones or experimental, but this covers the core standard ones.
    // For a full list, refer to MDN Web Docs or W3C specifications.
}